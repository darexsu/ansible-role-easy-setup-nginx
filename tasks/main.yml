---
- name: merge dictionaries
  block:
  - include_vars:
      file: ../../darexsu.nginx/defaults/main.yml
      name: nginx_default_vars

  - name: merge default and new dictionaries
    set_fact:
      "{{ item.key }}": "{{ nginx_default_vars[item.key] | combine(merge[item.key], recursive=True)}}"
    when: nginx_default_vars[item.key] is defined
    with_dict: "{{ merge }}"

  - name: combine defaults vars with merge dictionary
    set_fact:
      merge: "{{ nginx_default_vars | combine(merge, recursive=True)}}"
  when: merge is defined

- name: nginx role is disabled
  meta: end_play
  when: not nginx.enabled

- name: control apache2 service before install
  include_role: 
    name: darexsu.apache    

- name: include nginx install
  include_tasks: ./tasks/install/nginx_install__{{ ansible_os_family | lower }}.yml
  when: nginx_install.enabled

- name: include nginx config
  include_tasks: ./tasks/config/nginx_config__conf.yml
  when: nginx_conf.enabled

- name: include nginx config
  include_tasks: ./tasks/config/nginx_config__virtualhost.yml
  when: nginx_virtualhost[item.key]['enabled']
  with_dict: "{{ nginx_virtualhost }}"

- name: service facts
  ansible.builtin.service_facts:

- name: "ensure nginx is {{ nginx_service['state'] }}"
  ansible.builtin.service:
    name: nginx
    state: "{{ nginx_service['state'] }}"
    enabled: "{{ nginx_service.enabled }}"
  when: ansible_facts.services is search(nginx)
